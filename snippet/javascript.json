{
    "打印 console.log": {
        "prefix": "cl",
        "body": [
            "console.log($1)"
        ]
    },
    "生成 new Prmoise": {
        "prefix": "fnpromise",
        "body": [
            "new Promise(function (resolve , reject){",
            "   $1",
            "})"
        ]
    },
    "生成查询函数" : {
        "prefix": "fgsearch", 
        "body": [
            "function $1(value,array){" , 
            "   return array.filter((item) => item$2 == value)" ,
            "}"
        ]
    },
    "生成去重函数": {
        "prefix": "fgunique",
        "body": [
            "function unique ( arr ) {",
            "   return Array.from(new Set(arr))",
            "}"
        ]
    },
    "生成递归函数": {
        "prefix": "fgrecursion",
        "body": [
            "function $1 ( item ) {",
            "   if(item.children.length) {",
            "      for(let i = 0 ; i < item.children.length  ; i ++){",
            "           $1(item.children[i])",
            "      }",
            "   }",
            "}"
        ]
    },
    "生成格式化时间函数": {
        "prefix": "fgformatdate",
        "body": [
            "function dateFormat (fmt , date ) {",
            "   var o = { ",
            "       'M+' : date.getMonth()+1,",
            "       'd+' : date.getDate(),  ",
            "       'H+' : date.getHours(),",
            "       'm+' : date.getMinutes(),",
            "       's+' : date.getSeconds(),       ",
            "       'q+' : Math.floor((date.getMonth()+3)/3), ",
            "       'S'  : date.getMilliseconds()            ",
            "   };",
            "   if(/(y+)/.test(fmt)) {",
            "       fmt=fmt.replace(RegExp.\\$1, (date.getFullYear()+'').substr(4 - RegExp.\\$1.length)); ",
            "   }",
            "   for(var k in o) {",
            "       if(new RegExp('('+ k +')').test(fmt)){",
            "           fmt = fmt.replace(RegExp.\\$1, (RegExp.\\$1.length==1) ? (o[k]) : (('00'+ o[k]).substr((''+ o[k]).length)));",
            "       }",
            "   }",
            "   return fmt; ",
            "} "
        ]
    },
    "生成 for 语句": {
        "prefix": "fgfor",
        "body": [
            "for(let i = 0; i < $1.length ; i ++) {",
            "   $2",
            "}"
        ]
    },
    "生成 forEach 方法": {
        "prefix": "fgforeach",
        "body": [
            "$1.forEach(function (item) {",
            "   $2",
            "})"
        ]
    },
    "导入 vue3 " : {
        "prefix":"fivue3" ,
        "body" : [
            "import { $1 } from 'vue'"
        ]
    }
}